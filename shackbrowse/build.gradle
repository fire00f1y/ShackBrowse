buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}

apply plugin: 'com.android.application'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven {
        url "https://maven.google.com"
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    // compile 'com.android.support:appcompat-v7:21.0.+'
    compile 'com.google.android.gms:play-services-base:11.6.2'
    compile 'com.google.android.gms:play-services-gcm:11.6.2'
    compile 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    // compile 'com.android.support:support-v4:21.0.+'
    compile 'com.afollestad.material-dialogs:commons:0.9.6.0'
    compile 'com.github.vajro:MaterialDesignLibrary:1.6'
    compile 'com.github.bumptech.glide:glide:4.4.0'
    compile 'com.android.support:customtabs:27.0.2'
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.google.firebase:firebase-core:11.6.2'
    compile 'com.google.firebase:firebase-crash:11.6.2'
}

android {
    useLibrary 'org.apache.http.legacy'
    signingConfigs {
        release
    }
    compileSdkVersion 26
    buildToolsVersion '27.0.2'
    compileOptions.encoding = 'windows-1251'
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    defaultConfig {
        applicationId "net.woggle.shackbrowse"
        // multiDexEnabled true
    }
    productFlavors {
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

def propFile = file('../signing.properties')
if (propFile.canRead()) {
    def Properties p = new Properties()
    p.load(new FileInputStream(propFile))

    if (p != null
            && p.containsKey('STORE_FILE')
            && p.containsKey('STORE_PASSWORD')
            && p.containsKey('KEY_ALIAS')
            && p.containsKey('KEY_PASSWORD')
    ) {
        println "RELEASE_BUILD: Signing..."

        android.signingConfigs.release.storeFile = file(p['STORE_FILE'])
        android.signingConfigs.release.storePassword = p['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = p['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = p['KEY_PASSWORD']

    } else {
        println "RELEASE_BUILD: Required properties in signing.properties are missing"
        android.buildTypes.release.signingConfig = null
    }

} else {
    println "RELEASE_BUILD: signing.properties not found"
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'